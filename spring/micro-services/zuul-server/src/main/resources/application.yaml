spring:
  application:
    name: zuul-server
server:
  port: 8080
  ssl:
    enabled: true
    key-alias: zuul-server
    key-store-type: PKCS12
    #key-store: classpath:zuul-server.p12
    key-store: /home/sengp/git/java-tutorials/spring/micro-services/certs/zuul-server.p12
    key-store-password: changeit
    trust-store: /home/sengp/git/java-tutorials/spring/micro-services/certs/mycerts
    trust-store-password: changeit
    trust-store-type: JKS

eureka:
  client:
    securePortEnabled: true
    registerWithEureka: false
    fetchRegistry: true
    serviceUrl:
      defaultZone: https://localhost:8761/eureka/
    instance:
      nonSecurePortEnabled: false
      securePortEnabled: true
      securePort: ${server.port}
      #preferIpAddress: true
      instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}

zuul:
  #service mapping will be done if URL starts with /api
  sslHostnameValidationEnabled: false
  prefix: /api
  routes:
    student-service: /student/**
      #path: /student/**
      #serviceId: student-service

#  ratelimit:
#    enabled: true
#    repository: JPA
#    policy-list:
#      student-service:
#      - limit: 200
#        refresh-interval: 60
#        type:
#        - origin

#student-service:
#  ribbon:
#    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
#    #listOfServers: http://localhost:9081,http://localhost:9082,http://localhost:9083
#    ConnectTimeout: 1000
#    ReadTimeout: 3000
#    MaxTotalHttpConnections: 500
#    MaxConnectionsPerHost: 100

management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream, info, health


logging:
  file: ${logging.baseloc:/tmp/zuul}/${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}.log
  level:
    root: INFO
    #org.apache.http.wire: ERROR
    #org.springframework.web: DEBUG
    com.netflix.hystrix: DEBUG
